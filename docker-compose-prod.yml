version: "3.8"

services:
  # Our NestJS Api
  back-end:
    build:
      dockerfile: Dockerfile
      context: ./back-end
      target: production
    restart: always
    volumes:
      - back-end-dist:/pong/back-end/dist
      - back-end-uploads:/pong/uploads
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/db
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
    networks:
      - front_net
      - back_net
      - db_net

  # Our Angular Frontend
  front-end:
    build:
      dockerfile: Dockerfile.prod
      context: ./front-end
    restart: always
    volumes:
      - front-end-dist:/usr/share/nginx/html/front-end/
    ports:
      - "80:80"
    networks:
      - front_net
      - back_net

  # Our Postgres Database for NestJS to connect to
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - psql-data:/var/lib/postgresql/data
    ports:
      - "35000:5432"
    networks:
      - db_net

  # The Postgres Admin tool if we want to run some custom queries and so on against our Database
  postgres_admin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - psql-data:/var/lib/postgres_admin
    ports:
      - "5050:80"
    networks:
      - db_net

volumes:
  back-end-dist:
  back-end-uploads:
  front-end-dist:
  psql-data:

networks:
  front_net:
    driver: bridge
  back_net:
    driver: bridge
  db_net:
    driver: bridge
